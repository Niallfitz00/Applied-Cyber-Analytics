---
title: "Assignment3"
format: html
editor: visual
---

Packages used for the Dataset Analysis.

```{r}
suppressPackageStartupMessages({
  suppressWarnings({
    library(dplyr)
    library(readr)
    library(ggplot2)
    library(plotly)
    library(leaflet)
    library(sf)
    library(caret)
    library(rpart)
    library(wordcloud)
    library(tm)
    library(tidyverse)
    library(RColorBrewer)
  })
})
```

Reading in the CSV Files. Yes i know i have more than needed, but i found 3 online and then created my own data set in order to make a word cloud. I consider this my own superior enhancement (SE5).

```{r message=FALSE}
# Reading the dataset with the correct file path and extension
cyberthreat <- read_csv('C:/Cybersecurity Masters/Blair Applied Analytics/Assignment 3/Assignment3Project/cyberthreat.csv')
countries <- read_csv('C:/Cybersecurity Masters/Blair Applied Analytics/Assignment 3/Assignment3Project/countries.csv')
databreaches <- read_csv('C:/Cybersecurity Masters/Blair Applied Analytics/Assignment 3/Assignment3Project/databreaches.csv')
world_shape <- st_read("C:/Cybersecurity Masters/Blair Applied Analytics/Assignment 3/Assignment3Project/world-administrative-boundaries.shp", quiet = TRUE)
wordcloud_data <- read.csv("C:/Cybersecurity Masters/Blair Applied Analytics/Assignment 3/Assignment3Project/wordcloudfile.csv")
```

```{r}
# Display the first few rows of each dataset for initial exploration
head(cyberthreat)
head(databreaches)
head(countries)
head(world_shape)
head(wordcloud_data)

# Print the structure of each dataset for detailed examination
str(cyberthreat)
str(countries)
str(databreaches)
str(world_shape)
str(wordcloud_data)

#Data Preperation
cyberthreat <- na.omit(cyberthreat)
databreaches <- na.omit(databreaches)
countries <- na.omit(countries)
```

**Dataset : Cyberthreats.csv**

In my analysis, I conducted a detailed examination of a cybersecurity dataset to identify and analyse the most prevalent types of cyber attacks and the protocols involved in these incidents. By calculating the top three attack types and further analysing the percentage split of protocols within each attack type, I've uncovered not only which attacks are most common but also how they are carried out. This insight is crucial for understanding current cyber threat trends and highlights the necessity for targeted defensive strategies against these specific attack vectors. My use of interactive visualisation tools, like Plotly, to present this data effectively communicates the significance and distribution of these threats, offering a clear and engaging interpretation of the data. This analysis serves as a foundational step towards enhancing cybersecurity measures and prioritising response efforts to better protect against the most significant threats.

```{r}
# Identify the top 3 most common Attack Types (or more if there are ties)
top_three_attacktypes <- cyberthreat %>%
  count(Attacktype, sort = TRUE) %>%
  top_n(n = 3, wt = n)

# Generate a rainbow color scheme based on the number of unique attack types included
num_of_attack_types <- nrow(top_three_attacktypes)
colors <- rainbow(num_of_attack_types)

# Create a bar plot using Plotly to visualize the top attack types
plot <- plot_ly(data = top_three_attacktypes, x = ~Attacktype, y = ~n, type = 'bar',
                marker = list(color = colors),
                text = ~paste('Count: ', n)) %>%
  layout(title = "Top Attack Types",
         xaxis = list(title = "Attack Type", tickangle = -45, tickfont = list(size = 10)),
         yaxis = list(title = "Frequency"))

# Render the plot
plot

# Filter the data to include only rows with the top 3 Attack Types
top_attacktypes_data <- cyberthreat %>%
  filter(Attacktype %in% top_three_attacktypes$Attacktype)

# Calculate the percentage split of 'Protocol' within each 'Attacktype'
protocol_percentage <- top_attacktypes_data %>%
  group_by(Attacktype, Protocol) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  mutate(Total = sum(Count), Percentage = (Count / Total) * 100) %>%
  select(Attacktype, Protocol, Percentage) %>%
  ungroup()

# Print the results
print(protocol_percentage)

# Create a grouped bar plot with ggplot to show Protocol usage percentage by Attack Type
ggplot(protocol_percentage, aes(fill=Protocol, y=Percentage, x=Attacktype)) +
  geom_bar(position="fill", stat="identity") +
  scale_y_continuous(labels=scales::percent) +
  labs(title="Protocol Usage Percentage by Attack Type",
       x="Attack Type", y="Percentage",
       fill="Protocol") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle=45, hjust=1))

```

**Dataset 2: Data Breaches**

Firstly, the frequency of data breaches over the years was explored, revealing trends over time through a line chart, indicating potentially increasing or fluctuating occurrences. This temporal analysis helps in understanding how the cybersecurity landscape has evolved.

```{r}
# Analysis 1: Frequency of Data Breaches Over Years
# Ensuring 'Year' is treated as numeric
databreaches$Year <- as.numeric(as.character(databreaches$Year))
# Calculating and printing breaches per year
breaches_per_year <- databreaches %>%
  group_by(Year) %>%
  summarise(Count = n())
print(breaches_per_year)
# Frequency of Data Breaches Over Years
ggplot(breaches_per_year, aes(x = Year, y = Count)) +
  geom_line() + geom_point() +
  labs(title = "Frequency of Data Breaches Over Years", x = "Year", y = "Count") +
  theme_minimal()

```

Secondly, an investigation into which sectors have been most affected by data breaches showed a ranking based on the number of incidents. This analysis is crucial for identifying industries that may be particularly vulnerable or targeted.

```{r}
# Analysis 2: Sectors Most Affected by Data Breaches
# Calculating and printing breaches by sector
breaches_by_sector <- databreaches %>%
  group_by(Sector) %>%
  summarise(Count = n()) %>%
  arrange(desc(Count))

print(breaches_by_sector)
```

Thirdly, the focus shifted to the methods of data breaches, where duplicates were removed for an accurate count, and the most common tactics employed by attackers were identified. This step is key in understanding the preferred methods of exploitation and could guide defensive strategies.

```{r}
# Analysis 3: Most Common Methods of Data Breaches
# Removing complete duplicate rows
databreaches_unique <- databreaches %>%
  distinct()
# Calculating and printing common methods of breaches on the unique dataset
common_methods <- databreaches_unique %>%
  group_by(Method) %>%
  summarise(Count = n()) %>%
  arrange(desc(Count))

print(common_methods)
```

Fourthly, the average number of records affected by breaches per sector was calculated, providing insights into the impact of breaches across different industries. This highlights sectors where breaches tend to be more devastating in terms of data exposure.

```{r}
# Analysis 4: Average Number of Records Affected by Breaches Per Sector
# Calculating and printing average records affected by breaches per sector
average_records_per_sector <- databreaches %>%
  group_by(Sector) %>%
  summarise(AverageRecords = mean(Records)) %>%
  arrange(desc(AverageRecords))

print(average_records_per_sector)

```

Lastly, an analysis of the average number of records affected by breaches per method was conducted, further detailed with a visualization. This not only quantifies the effectiveness of different breach methods in compromising data but also underscores the methods that result in significant data loss.

```{r}
# Analysis 5: Average Number of Records Affected by Breaches Per Method
# Calculating and printing average records affected by breaches per method
average_records_per_method <- databreaches %>%
  group_by(Method) %>%
  summarise(AverageRecords = mean(Records)) %>%
  arrange(desc(AverageRecords))

print(average_records_per_method)

average_records_per_method <- databreaches %>%
  group_by(Method) %>%
  summarise(AverageRecords = mean(Records)) %>%
  arrange(desc(AverageRecords))

ggplot(average_records_per_method, aes(x = reorder(Method, AverageRecords), y = AverageRecords)) +
  geom_col() +
  theme_minimal() +
  coord_flip() + # Flip coordinates for better readability
  scale_y_continuous(labels = scales::comma) + # Use comma formatting for large numbers
  labs(title = "Average Records Affected by Breach Method", x = "Method", y = "Average Records")
```

Overall, these analyses offer a comprehensive overview of data breaches, pinpointing areas of concern and methods requiring heightened security measures. The interpretations guide strategic decisions in cybersecurity policy and investment, emphasizing the importance of tailored defenses across sectors and against specific breach methods.
